datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

enum ApiKeyPermissions {
  PUBLIC
  READ
  CREATE
  UPDATE
  DELETE
  ADMIN
}

model ApiKey {
  id          String              @id @default(uuid())
  name        String
  expires     DateTime
  permissions ApiKeyPermissions[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model File {
  id        String             @id @default(uuid())
  fileName  String
  mimeType  String
  content   Bytes

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@index([createdAt])
}

model Buyer {
  id                String         @id @default(uuid())
  name              String?
  blockchainAddress String?        @unique
  purchase          Purchase[]
  filecoinNodes     FilecoinNode[]
  contracts         Contract[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Seller {
  id                String        @id @default(uuid())
  name              String
  addressLine1      String
  addressLine2      String?
  contactPerson     String?
  blockchainAddress String?       @unique
  purchase          Purchase[]
  certificates      Certificate[]
  contracts         Contract[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Batch {
  id                        String @id 
  redemptionStatementId     String? @unique()
  totalVolume               BigInt?
  certificates              Certificate[]
}

model Certificate {
  id                            String               @id @default(uuid())
  energyWh                      BigInt               @default(0)
  generatorName                 String?
  generatorId                   String?
  region                        String?
  country                       CountryEnumType
  productType                   ProductEnumType      @default(IREC)
  energySource                  EnergySourceEnumType @default(SOLAR)
  generationStart               DateTime?
  generationStartTimezoneOffset Int?
  generationEnd                 DateTime?
  generationEndTimezoneOffset   Int?
  txHash                        String?
  purchase                      Purchase[]
  seller                        Seller               @relation(fields: [initialSellerId], references: [id])
  initialSellerId               String
  redemptionDate                DateTime?
  nameplateCapacityW            Int?
  commissioningDate             DateTime?
  commissioningDateTimezoneOffset   Int?
  label                         LabelEnumType?
  certificateCid                String?

  batch                         Batch? @relation(fields: [batchId], references: [id])
  batchId                       String?
  onchainId                     BigInt? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model FilecoinNode {
  id                String                     @id
  Buyer             Buyer?                     @relation(fields: [buyerId], references: [id])
  buyerId           String
  blockchainAddress String?
  purchases         Purchase[]
  contracts         Contract[]
  region            String?
  country           CountryEnumType?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([id, buyerId])
}

model Purchase {
  id                           String                     @id @default(uuid())
  txHash                       String?
  certificate                  Certificate                @relation(fields: [certificateId], references: [id])
  certificateId                String
  recsSoldWh                   BigInt
  buyer                        Buyer?                     @relation(fields: [buyerId], references: [id])
  buyerId                      String?
  seller                       Seller?                    @relation(fields: [sellerId], references: [id])
  sellerId                     String?
  attestationId                String?                    @unique()
  reportingStart               DateTime?
  reportingStartTimezoneOffset Int?
  reportingEnd                 DateTime?
  reportingEndTimezoneOffset   Int?
  filecoinNode                 FilecoinNode?              @relation(fields: [filecoinNodeId], references: [id])
  filecoinNodeId               String?
  Contract                     Contract?                  @relation(fields: [contractId], references: [id])
  contractId                   String?
  beneficiary                  String?
  purpose                      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([id, buyerId])
}

model Order {
  id                 String                       @id @default(uuid())
  emailAddress       String
  protocolType       ProtocolTypeEnumType
  userType           UserTypeEnumType
  items              OrderItem[]
  paymentPreferences PaymentPreferencesEnumType[]
  confirmationToken  String?                      @default(uuid())
  confirmed          Boolean                      @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model OrderItem {
  id         String               @id @default(uuid())
  minerId    String
  country    CountryEnumType
  city       String?
  order      Order                @relation(fields: [orderId], references: [id])
  orderId    String
  timeFrames OrderItemTimeFrame[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([orderId, minerId])
}

model OrderItemTimeFrame {
  id          String     @id @default(uuid())
  orderItem   OrderItem? @relation(fields: [orderItemId], references: [id])
  orderItemId String?
  start       DateTime
  end         DateTime
  energyWh      BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Contract {
  id             String                 @id @default(uuid())
  buyer          Buyer                  @relation(fields: [buyerId], references: [id])
  buyerId        String
  seller         Seller                 @relation(fields: [sellerId], references: [id])
  sellerId       String
  filecoinNode   FilecoinNode?          @relation(fields: [filecoinNodeId], references: [id])
  filecoinNodeId String?
  productType    ProductEnumType
  energySources  EnergySourceEnumType[]
  region         String?
  countries      CountryEnumType[]
  contractDate   DateTime
  deliveryDate   DateTime
  reportingStart DateTime
  reportingEnd   DateTime
  timezoneOffset Int
  volume         BigInt                 @default(0)
  externalId     String?
  label          LabelEnumType?

  onchainId      String?

  purchases Purchase[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum PaymentPreferencesEnumType {
  WIRE_TRANSFER
  CRYPTO
}

enum ProtocolTypeEnumType {
  FILECOIN
  BITCOIN
}

enum ProductEnumType {
  REC
  IREC
  GO
  TIGR
  LGC
  REGO
  NFC
}

enum EnergySourceEnumType {
  SOLAR
  WIND
  HYDRO
  MARINE
  THERMAL
  BIOMASS
  BIOGAS
}

enum UserTypeEnumType {
  MINER
  STORAGE_PROVIDER
  APP_DEVELOPER
  CRYPTO_USER
  OTHER
}

enum LabelEnumType {
  EKOENERGY
  EUROPEAN_GREEN
  GREEN_POWER_AUSTRALIA
  GREEN_E_ENERGY
  HKN_NEU100
  MILIEUKEUR
  NATUREMADE
  OK_POWER
  RECS_INTERNATIONAL_QUALITY_STANDARD
  RENEWABLEPLUS
  TUV_SUD_MARK_EE01_EE02
  ENERGIA_VERDE_100
  BRA_MILJOVAL
  GRUENER_STROM
}

// Taken from https://gist.github.com/ssskip/5a94bfcd2835bf1dea52
enum CountryEnumType {
  AF
  AX
  AL
  DZ
  AS
  AD
  AO
  AI
  AQ
  AG
  AR
  AM
  AW
  AU
  AT
  AZ
  BS
  BH
  BD
  BB
  BY
  BE
  BZ
  BJ
  BM
  BT
  BO
  BA
  BW
  BV
  BR
  IO
  BN
  BG
  BF
  BI
  KH
  CM
  CA
  CV
  KY
  CF
  TD
  CL
  CN
  CX
  CC
  CO
  KM
  CG
  CD
  CK
  CR
  CI
  HR
  CU
  CY
  CZ
  DK
  DJ
  DM
  DO
  EC
  EG
  SV
  GQ
  ER
  EE
  ET
  FK
  FO
  FJ
  FI
  FR
  GF
  PF
  TF
  GA
  GM
  GE
  DE
  GH
  GI
  GR
  GL
  GD
  GP
  GU
  GT
  GG
  GN
  GW
  GY
  HT
  HM
  VA
  HN
  HK
  HU
  IS
  IN
  ID
  IR
  IQ
  IE
  IM
  IL
  IT
  JM
  JP
  JE
  JO
  KZ
  KE
  KI
  KR
  KP
  KW
  KG
  LA
  LV
  LB
  LS
  LR
  LY
  LI
  LT
  LU
  MO
  MK
  MG
  MW
  MY
  MV
  ML
  MT
  MH
  MQ
  MR
  MU
  YT
  MX
  FM
  MD
  MC
  MN
  ME
  MS
  MA
  MZ
  MM
  NA
  NR
  NP
  NL
  AN
  NC
  NZ
  NI
  NE
  NG
  NU
  NF
  MP
  NO
  OM
  PK
  PW
  PS
  PA
  PG
  PY
  PE
  PH
  PN
  PL
  PT
  PR
  QA
  RE
  RO
  RU
  RW
  BL
  SH
  KN
  LC
  MF
  PM
  VC
  WS
  SM
  ST
  SA
  SN
  RS
  SC
  SL
  SG
  SK
  SI
  SB
  SO
  ZA
  GS
  ES
  LK
  SD
  SR
  SJ
  SZ
  SE
  CH
  SY
  TW
  TJ
  TZ
  TH
  TL
  TG
  TK
  TO
  TT
  TN
  TR
  TM
  TC
  TV
  UG
  UA
  AE
  GB
  US
  UM
  UY
  UZ
  VU
  VE
  VN
  VG
  VI
  WF
  EH
  YE
  ZM
  ZW
}
