version: '3'

services:
  frontend:
    image: zero-pl-frontend
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend
    ports:
      - '8080:80'
    networks:
      zero-pl:

  backend:
    image: zero-pl-backend
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - '3333:3333'
    command: "/bin/sh -c \"prisma migrate deploy && node main.js\""
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/zero-protocol-labs"
      TOKENIZATION_BASE_URL: http://tokenization:3334
    volumes:
      - 'zero-pl-backend-tmp:/tmp'
    networks:
      zero-pl:

  tokenization:
    image: zero-pl-tokenization
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - db-tokenization
      - ganache
    ports:
      - '127.0.0.1:3334:3334'
    environment:
      PORT: "3334"
      TOKENIZATION_DATABASE_URL: "postgresql://postgres:postgres@db-tokenization:5432/tokenization"
      DATABASE_URL: "postgresql://postgres:postgres@db-tokenization:5432/tokenization"
      REDIS_URL: "redis://:@redis:6379"
      WEB3: "http://ganache:8545"
    networks:
      zero-pl:

  ganache:
    image: trufflesuite/ganache-cli
    restart: unless-stopped
    command: |
      ganache-cli \
        --db /data
        -m "chalk park staff buzz chair purchase wise oak receive avoid avoid home" \
        -l 8000000 \
        -e 1000000 \
        -a 40 \
        -h 0.0.0.0
    volumes:
      - ganache-data:/data
    networks:
      zero-pl:

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
    - zero-pl-pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zero-protocol-labs
    networks:
      zero-pl:

  db-tokenization:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - '127.0.0.1:5433:5432'
    volumes:
    - zero-pl-pg-data-tokenization:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tokenization
    networks:
      zero-pl:

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '127.0.0.1:6379:6379'
    networks:
      zero-pl:
    volumes:
      - redis-data:/data

  mailhog:
    image: mailhog/mailhog:latest
    restart: unless-stopped
    ports:
      - '127.0.0.1:1025:1025'
      - '127.0.0.1:8025:8025'
    networks:
      zero-pl:

volumes:
  zero-pl-pg-data:
  zero-pl-pg-data-tokenization:
  zero-pl-backend-tmp:
  ganache-data:
  redis-data:

networks:
  zero-pl:
