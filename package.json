{
  "name": "zero-protocol-labs",
  "version": "0.0.1",
  "license": "MIT",
  "private": true,
  "scripts": {
    "nx": "nx",
    "clean": "rm -rf dist tmp",
    "start": "concurrently --names 'FRONTEND,BACKEND,TOKENIZATION' -c 'yellow,cyan,green'  'yarn serve:frontend' 'yarn serve:backend' 'yarn serve:tokenization'",
    "build:next-ui": "yarn swagger:schema:generate && yarn build:api-client && yarn nx run frontend-next:build",
    "start-with-next-ui": "concurrently --names 'FRONTEND-NEXT,BACKEND,TOKENIZATION' -c 'yellow,cyan'  'yarn serve:frontend-next' 'yarn serve:backend' 'yarn serve:tokenization'",
    "serve:backend": "nx serve backend",
    "serve:tokenization": "PORT=$(grep TOKENIZATION_PORT .env | cut -d \"=\" -f2 | tr -d '\"') DATABASE_URL=$(grep TOKENIZATION_DATABASE_URL .env | cut -d \"=\" -f2 | tr -d '\"')  REDIS_HOST=$(grep REDIS_HOST .env | cut -d \"=\" -f2 | tr -d '\"') REDIS_PORT=$(grep REDIS_PORT .env | cut -d \"=\" -f2 | tr -d '\"') nx serve tokenization",
    "serve:frontend-next": "nx serve frontend-next --port=3000",
    "serve:frontend": "chmod +x ./dev-env.sh && ./dev-env.sh && nx serve frontend --port=3000",
    "start:docker": "yarn build:docker && docker-compose --env-file .env -f docker-compose.yaml down && docker-compose --env-file .env -f docker-compose.yaml up -d",
    "start:no-frontend": "concurrently --names 'BACKEND,TOKENIZATION' -c 'yellow,cyan' 'yarn serve:backend' 'yarn serve:tokenization'",
    "build": "yarn swagger:schema:generate && yarn build:api-client && cp apps/frontend/src/index.html.template apps/frontend/src/index.html  && nx run-many --target=build --projects=backend,frontend,tokenization --parallel",
    "build:prod": "yarn swagger:schema:generate && yarn build:api-client && cp apps/frontend/src/index.html.template apps/frontend/src/index.html  && nx run-many --target=build --projects=backend,frontend,tokenization --parallel --prod",
    "build:docker": "yarn build:prod && nx run-many --target=docker-image-build --projects=backend,frontend,tokenization",
    "test": "nx test",
    "lint": "nx workspace-lint && nx lint",
    "e2e": "nx e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "workspace-generator": "nx workspace-generator",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "db:migrate:generate": "prisma generate",
    "db:migrate:reset": "prisma migrate reset",
    "db:migrate:ci": "prisma migrate reset --skip-generate --skip-seed --force",
    "db:migrate:deploy": "prisma migrate deploy",
    "swagger:schema:generate": "cd apps/backend && REDIS_HOST= DATABASE_URL=postgresql://localhost:5432 TS_NODE_PROJECT=tsconfig.app.json ts-node src/generateSchema.ts && cd ../..",
    "build:api-client": "cd libs/api-client && yarn build",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
    "migrate:tokenization": "DATABASE_URL=$(grep TOKENIZATION_DATABASE_URL .env | cut -d \"=\" -f2 | tr -d '\"') DB_SSL_OFF=$(grep DB_SSL_OFF .env | cut -d \"=\" -f2 | tr -d '\"') ENCRYPTION_KEY=$(grep ENCRYPTION_KEY .env | cut -d \"=\" -f2 | tr -d '\"') typeorm migration:run --dataSource node_modules/@zero-labs/tokenization-api/dist/ormconfig.js && yarn typeorm migration:run --dataSource apps/tokenization/ormconfig.ts",
    "migrate:all": "yarn migrate:tokenization && yarn db:migrate:deploy",
    "seed:all:dev": "./seed-dev.sh"
  },
  "dependencies": {
    "@emotion/css": "11.7.1",
    "@emotion/react": "11.7.1",
    "@emotion/server": "11.4.0",
    "@emotion/styled": "11.6.0",
    "@energyweb/origin-backend-utils": "1.8.1",
    "@energyweb/utils-general": "11.2.1",
    "@ethersproject/bignumber": "5.3.0",
    "@ethersproject/constants": "5.3.0",
    "@mui/icons-material": "5.2.5",
    "@mui/lab": "5.0.0-alpha.62",
    "@mui/material": "5.2.6",
    "@mui/styles": "5.2.3",
    "@nestjs-modules/mailer": "1.6.0",
    "@nestjs/bull": "0.5.5",
    "@nestjs/common": "8.4.4",
    "@nestjs/config": "2.0.0",
    "@nestjs/core": "8.4.4",
    "@nestjs/cqrs": "8.0.5",
    "@nestjs/passport": "8.0.1",
    "@nestjs/platform-express": "8.2.3",
    "@nestjs/swagger": "5.1.4",
    "@nestjs/typeorm": "8.0.3",
    "@prisma/client": "3.6.0",
    "@t00nday/nestjs-pdf": "2.0.6",
    "@zero-labs/tokenization": "0.4.1",
    "@zero-labs/tokenization-api": "0.9.0",
    "assert": "2.0.0",
    "axios": "0.24.0",
    "buffer": "6.0.3",
    "bull": "4.8.3",
    "class-transformer": "0.5.1",
    "class-validator": "0.13.1",
    "core-js": "3.19.1",
    "crypto-browserify": "3.12.0",
    "d3": "7.3.0",
    "d3-sankey": "0.12.3",
    "dayjs": "1.10.7",
    "ethers": "5.3.1",
    "formik": "2.2.9",
    "history": "5.2.0",
    "htmling": "0.0.8",
    "joi": "17.5.0",
    "luxon": "2.3.0",
    "next": "12.0.7",
    "os-browserify": "0.3.0",
    "passport": "0.5.0",
    "passport-headerapikey": "1.2.2",
    "polly-js": "1.8.2",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-dropzone": "11.4.2",
    "react-helmet-async": "1.1.2",
    "react-query": "3.34.7",
    "react-router": "6.0.0",
    "react-router-dom": "6.0.0",
    "reflect-metadata": "0.1.13",
    "regenerator-runtime": "0.13.9",
    "rxjs": "7.4.0",
    "stream-browserify": "3.0.0",
    "swagger-ui-express": "4.1.6",
    "tslib": "2.3.1",
    "typeorm": "0.3.6",
    "yup": "0.32.11",
    "lodash": "4.17.21"
  },
  "devDependencies": {
    "@types/lodash": "4.14.179",
    "@types/bull": "3.15.8",
    "@emotion/babel-plugin": "11.3.0",
    "@nestjs/schematics": "8.0.5",
    "@nestjs/testing": "8.0.6",
    "@nrwl/cli": "13.4.2",
    "@nrwl/cypress": "13.4.2",
    "@nrwl/eslint-plugin-nx": "13.4.2",
    "@nrwl/jest": "13.4.2",
    "@nrwl/js": "13.4.2",
    "@nrwl/linter": "13.4.2",
    "@nrwl/nest": "13.4.2",
    "@nrwl/next": "13.4.2",
    "@nrwl/node": "13.4.2",
    "@nrwl/react": "13.4.2",
    "@nrwl/tao": "13.4.2",
    "@nrwl/web": "13.4.2",
    "@nrwl/workspace": "13.4.2",
    "@svgr/rollup": "5.5.0",
    "@testing-library/react": "12.1.2",
    "@testing-library/react-hooks": "7.0.2",
    "@types/d3": "7.1.0",
    "@types/d3-sankey": "0.11.2",
    "@types/jest": "27.0.3",
    "@types/luxon": "2.0.8",
    "@types/multer": "1.4.7",
    "@types/node": "16.11.12",
    "@types/passport": "1.0.7",
    "@types/passport-http": "0.3.9",
    "@types/passport-strategy": "0.2.35",
    "@types/react": "17.0.30",
    "@types/react-dom": "17.0.9",
    "@types/react-helmet-async": "1.0.3",
    "@typescript-eslint/eslint-plugin": "5.3.1",
    "@typescript-eslint/parser": "5.3.1",
    "babel-jest": "27.4.4",
    "barrelsby": "2.3.0",
    "concurrently": "6.2.1",
    "cypress": "9.1.1",
    "dotenv": "10.0.0",
    "eslint": "8.2.0",
    "eslint-config-next": "12.0.7",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-cypress": "2.10.3",
    "eslint-plugin-import": "2.25.2",
    "eslint-plugin-jsx-a11y": "6.5.1",
    "eslint-plugin-react": "7.26.1",
    "eslint-plugin-react-hooks": "4.3.0",
    "husky": "7.0.0",
    "jest": "27.4.4",
    "nock": "13.1.3",
    "orval": "6.5.1",
    "prettier": "2.3.2",
    "prisma": "3.6.0",
    "react-test-renderer": "17.0.2",
    "ts-jest": "27.1.1",
    "ts-node": "10.4.0",
    "typescript": "4.5.3"
  },
  "prisma": {
    "schema": "apps/backend/prisma/schema.prisma"
  }
}